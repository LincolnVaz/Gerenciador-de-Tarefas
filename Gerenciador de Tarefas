import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.Scanner;

public class GerenciadorDeTarefas {

    // Classe para representar uma Tarefa
    static class Tarefa {
        private String descricao;
        private boolean concluida;

        public Tarefa(String descricao) {
            this.descricao = descricao;
            this.concluida = false;
        }

        public String getDescricao() {
            return descricao;
        }

        public boolean isConcluida() {
            return concluida;
        }

        public void marcarComoConcluida() {
            this.concluida = true;
        }

        @Override
        public String toString() {
            return (concluida ? "[Concluída] " : "[Pendente] ") + descricao;
        }
    }

    public static void main(String[] args) {
        ArrayList<Tarefa> tarefas = new ArrayList<>();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            try {
                System.out.println("\n=== Gerenciador de Tarefas ===");
                System.out.println("1. Adicionar Tarefa");
                System.out.println("2. Listar Tarefas");
                System.out.println("3. Marcar Tarefa como Concluída");
                System.out.println("4. Remover Tarefa");
                System.out.println("5. Sair");
                System.out.print("Escolha uma opção: ");
                
                int opcao = scanner.nextInt();
                scanner.nextLine(); // Consumir a quebra de linha

                switch (opcao) {
                    case 1: // Adicionar Tarefa
                        System.out.print("Digite a descrição da tarefa: ");
                        String descricao = scanner.nextLine();
                        tarefas.add(new Tarefa(descricao));
                        System.out.println("Tarefa adicionada com sucesso!");
                        break;

                    case 2: // Listar Tarefas
                        if (tarefas.isEmpty()) {
                            System.out.println("Nenhuma tarefa cadastrada.");
                        } else {
                            System.out.println("\nLista de Tarefas:");
                            for (int i = 0; i < tarefas.size(); i++) {
                                System.out.println((i + 1) + ". " + tarefas.get(i));
                            }
                        }
                        break;

                    case 3: // Marcar Tarefa como Concluída
                        System.out.print("Digite o número da tarefa a ser concluída: ");
                        int numConcluir = scanner.nextInt();
                        if (numConcluir > 0 && numConcluir <= tarefas.size()) {
                            tarefas.get(numConcluir - 1).marcarComoConcluida();
                            System.out.println("Tarefa marcada como concluída!");
                        } else {
                            System.out.println("Número inválido!");
                        }
                        break;

                    case 4: // Remover Tarefa
                        System.out.print("Digite o número da tarefa a ser removida: ");
                        int numRemover = scanner.nextInt();
                        if (numRemover > 0 && numRemover <= tarefas.size()) {
                            tarefas.remove(numRemover - 1);
                            System.out.println("Tarefa removida com sucesso!");
                        } else {
                            System.out.println("Número inválido!");
                        }
                        break;

                    case 5: // Sair
                        System.out.println("Saindo do Gerenciador de Tarefas...");
                        scanner.close();
                        return;

                    default:
                        System.out.println("Opção inválida!");
                }
            } catch (InputMismatchException e) {
                System.out.println("Entrada inválida! Por favor, insira um número.");
                scanner.nextLine(); // Consumir a entrada inválida e limpar o buffer
            }
        }
    }
}
